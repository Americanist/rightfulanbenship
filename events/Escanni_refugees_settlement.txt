namespace = escanni_refugees_settlement

#The final flight of the Escanni
country_event = {
	id = escanni_refugees_settlement.1
	title = "escanni_refugees_settlement.1.t"
	picture = REFUGEES_ESCAPING_eventPicture
	desc = "escanni_refugees_settlement.1.d"
	
	
	trigger = {
		is_year = 1446
		NOT = { is_year = 1448 }
		NOT = {
			has_country_flag = escanni_refugees_arrived
		}
		OR = {
			AND = {
				capital_scope = {
					OR = {
						region = esmaria_region
						region = damescrown_region
						region = east_dameshead_region
						region = west_dameshead_region
						region = the_borders_region
					}
				}
				OR = {
					num_of_total_ports = 1 #total_ports to include countries with exclaves like Wex
					capital_scope = {
						OR = {
							area = cann_esmar_area
							area = heartland_borders_area
							area = songbarges_area
						}
					}
				}
			}
			NOT = {tag = A76} #Uelaire
			NOT = {tag = A73} #Silverforge
			tag = A46 #Arbaran
			tag = A13 #Gawed
		}
		Any_owned_province = {
			NOT = { has_province_modifier = escanni_refugee_settlement_massive }
		}
	}

	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			set_country_flag = escanni_refugees_arrived
			if = {
				limit = {
					num_of_owned_provinces_with = {
						value = 3
						NOT = { has_province_modifier = escanni_refugee_settlement_massive }
					}
				}	
				random_owned_province = {
					limit = { NOT = { has_province_modifier = escanni_refugee_settlement_massive } }
					save_event_target_as = escanni_migration_target_1
				}
				random_owned_province = { 
					limit = {
						NOT = {
							has_province_modifier = escanni_refugee_settlement_massive
							province_id = event_target:escanni_migration_target_1
						}
					}
					save_event_target_as = escanni_migration_target_2
				}
				random_owned_province = { 
					limit = {
						NOT = {
							has_province_modifier = escanni_refugee_settlement_massive
							province_id = event_target:escanni_migration_target_1
							province_id = event_target:escanni_migration_target_2
						}
					}
					save_event_target_as = escanni_migration_target_3
				}
			}
			else_if = {
				limit = {
					num_of_owned_provinces_with = {
						value = 2
						NOT = { has_province_modifier = escanni_refugee_settlement_massive }
					}
					NOT = {
						num_of_owned_provinces_with = {
							value = 3
							NOT = { has_province_modifier = escanni_refugee_settlement_massive }
						}
					}
				}
				random_owned_province = {
					limit = { NOT = { has_province_modifier = escanni_refugee_settlement_massive } }
					save_event_target_as = escanni_migration_target_1
				}
				random_owned_province = { 
					limit = {
						NOT = {
							has_province_modifier = escanni_refugee_settlement_massive
							province_id = event_target:escanni_migration_target_1
						}
					}
					save_event_target_as = escanni_migration_target_2
				}
			}
			else_if = {
				limit = {
					num_of_owned_provinces_with = {
						value = 1
						NOT = { has_province_modifier = escanni_refugee_settlement_massive }
					}
					NOT = {
						num_of_owned_provinces_with = {
							value = 2
							NOT = { has_province_modifier = escanni_refugee_settlement_massive }
						}
					}
				}
				random_owned_province = {
					limit = { NOT = { has_province_modifier = escanni_refugee_settlement_massive } }
					save_event_target_as = escanni_migration_target_1
				}
			}
		}
	}

	option = {
		name = escanni_refugees_settlement.1.a
		ai_chance = { factor = 1 }
		custom_tooltip = escanni_refugees_settlement_1_tt

		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 3
					NOT = { has_province_modifier = escanni_refugee_settlement_massive }
				}
			}
			event_target:escanni_migration_target_1 = {
				increase_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_2 = {
				increase_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_3 = {
				increase_escanni_refugee_settlement_size = yes
			}
		}
		else_if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 2
					NOT = { has_province_modifier = escanni_refugee_settlement_massive }
				}
				NOT = {
					num_of_owned_provinces_with = {
						value = 3
						NOT = { has_province_modifier = escanni_refugee_settlement_massive }
					}
				}
			}
			event_target:escanni_migration_target_1 = {
				increase_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_2 = {
				increase_escanni_refugee_settlement_size = yes
			}
		}
		else_if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 1
					NOT = { has_province_modifier = escanni_refugee_settlement_massive }
				}
				NOT = {
					num_of_owned_provinces_with = {
						value = 2
						NOT = { has_province_modifier = escanni_refugee_settlement_massive }
					}
				}
			}
			event_target:escanni_migration_target_1 = {
				increase_escanni_refugee_settlement_size = yes
			}
		}
	}
}

#The call of home
country_event = {
	id = escanni_refugees_settlement.2
	title = "escanni_refugees_settlement.2.t"
	picture = REFUGEES_ESCAPING_eventPicture
	desc = "escanni_refugees_settlement.2.d"

	trigger = {
		is_year = 1470
		NOT = {
			has_country_flag = escanni_refugees_left
		}
		capital_scope = {
			OR = {
				superregion = western_cannor_superregion
				superregion = escann_superregion
			}
		}
		any_owned_province = {
			has_escanni_refugees = yes
		}
		escann_superregion = { #checking only 1 province, don't know how to check for 3 yet
			any_province = {
				OR = {
					region = inner_castanor_region
					region = west_castanor_region
					region = south_castanor_region
				}
				NOT = {
					OR =  {
					is_empty = yes
					has_province_flag = escanni_migration_target
					}
				}
				owner = {
					NOT = { has_country_modifier = monstrous_nation }
				}
			}
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	immediate = { # Will encounter edge-cases if 3 provinces are not checked in Escann
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_escanni_refugees = yes
				}
				save_event_target_as = escanni_emigration_target_1
			}
			random_owned_province = {
				limit = {
					has_escanni_refugees = yes
					NOT = { province_id = event_target:escanni_emigration_target_1 }
				}
				save_event_target_as = escanni_emigration_target_2
			}
			random_owned_province = {
				limit = {
					has_escanni_refugees = yes
					NOT = {
						province_id = event_target:escanni_emigration_target_1
						province_id = event_target:escanni_emigration_target_2
					}
				}
				save_event_target_as = escanni_emigration_target_3
			}
			escann_superregion = {
				random_province = {
					limit = { 
						OR = {
							region = inner_castanor_region
							region = west_castanor_region
							region = south_castanor_region
						}
						NOT = {
							OR =  {
							is_empty = yes
							has_province_flag = escanni_migration_target
							}
						}
						owner = {
							NOT = { has_country_modifier = monstrous_nation }
						}
					}
					save_event_target_as = escanni_migration_target_1
				}
				random_province = {
					limit = { 
						OR = {
							region = inner_castanor_region
							region = west_castanor_region
							region = south_castanor_region
						}
						NOT = {
							OR =  {
							is_empty = yes
							has_province_flag = escanni_migration_target
							province_id = event_target:escanni_migration_target_1
							}
						}
						owner = {
							NOT = { has_country_modifier = monstrous_nation }
						}
					}
					save_event_target_as = escanni_migration_target_2
				}
				random_province = {
					limit = { 
						OR = {
							region = inner_castanor_region
							region = west_castanor_region
							region = south_castanor_region
						}
						NOT = {
							OR =  {
							is_empty = yes
							has_province_flag = escanni_migration_target
							province_id = event_target:escanni_migration_target_1
							province_id = event_target:escanni_migration_target_2
							}
						}
						owner = {
							NOT = { has_country_modifier = monstrous_nation }
						}
					}
					save_event_target_as = escanni_migration_target_3
				}
			}
		}
	}

	option = { # Try to convince them to stay
		name = escanni_refugee_settlement.2.a

	}

	option = { # I don't care
		name = escanni_refugee_settlement.2.b
		ai_chance = { factor = 1 }

		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 3
					has_escanni_refugees = yes
				}
			}
			event_target:escanni_emigration_target_1 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_emigration_target_2 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_emigration_target_3 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_1 = {
				set_province_flag = escanni_migration_target
			}
			event_target:escanni_migration_target_2 = {
				set_province_flag = escanni_migration_target
			}
			event_target:escanni_migration_target_3 = {
				set_province_flag = escanni_migration_target
			}
		}
		else_if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 2
					has_escanni_refugees = yes
				}
				NOT = {
					num_of_owned_provinces_with = {
						value = 3
						has_escanni_refugees = yes
					}
				}
			}
			event_target:escanni_emigration_target_1 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_emigration_target_2 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_1 = {
				set_province_flag = escanni_migration_target
			}
			event_target:escanni_migration_target_2 = {
				set_province_flag = escanni_migration_target
			}
		}
		else_if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 1
					has_escanni_refugees = yes
				}
				NOT = {
					num_of_owned_provinces_with = {
						value = 2
						has_escanni_refugees = yes
					}
				}
			}
			event_target:escanni_emigration_target_1 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_1 = {
				set_province_flag = escanni_migration_target
			}
		}
	}

	option = { # Help them leave
		name = escanni_refugee_settlement.2.c
		ai_chance = { factor = 1 }
		custom_tooltip = escanni_refugees_settlement_2_c_tt

		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 3
					has_escanni_refugees = yes
				}
			}
			event_target:escanni_emigration_target_1 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_emigration_target_2 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_emigration_target_3 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_1 = {
				set_province_flag = escanni_migration_target
			}
			event_target:escanni_migration_target_2 = {
				set_province_flag = escanni_migration_target
			}
			event_target:escanni_migration_target_3 = {
				set_province_flag = escanni_migration_target
			}
		}
		else_if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 2
					has_escanni_refugees = yes
				}
				NOT = {
					num_of_owned_provinces_with = {
						value = 3
						has_escanni_refugees = yes
					}
				}
			}
			event_target:escanni_emigration_target_1 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_emigration_target_2 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_1 = {
				set_province_flag = escanni_migration_target
			}
			event_target:escanni_migration_target_2 = {
				set_province_flag = escanni_migration_target
			}
		}
		else_if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 1
					has_escanni_refugees = yes
				}
				NOT = {
					num_of_owned_provinces_with = {
						value = 2
						has_escanni_refugees = yes
					}
				}
			}
			event_target:escanni_emigration_target_1 = {
				decrease_escanni_refugee_settlement_size = yes
			}
			event_target:escanni_migration_target_1 = {
				set_province_flag = escanni_migration_target
			}
		}
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = refugee_major_discrimination_policy } }
				set_country_flag = refugee_minor_discrimination_policy
				clr_country_flag = refugee_integration_policy
				clr_country_flag = refugee_neutral_policy
			}
		}
	}
}

#Event manager Wescann side
#country_event = {
#	id = escanni_refugees_settlement.3
#	title = "escanni_refugees_settlement.3.t"
#	picture = REFUGEES_ESCAPING_eventPicture
#	desc = "escanni_refugees_settlement.3.d"
#	
#	hidden = yes
#	
#	is_triggered_only = yes
#
#	trigger = {
#		capital_scope = {
#			OR = {
#				superregion = western_cannor_superregion
#				superregion = escann_superregion
#			}
#		}
#		any_owned_province = {
#			has_escanni_refugees = yes
#		}
#		has_any_escanni_refugee_policy = no
#	}
#
#	mean_time_to_happen = {
#		days = 1
#	}
#
#	option = {
#		name = escanni_refugee_settlement.3.a
#		random_list = {
#			1 = { }
#			# ensure there's an empty option first in case none of the others are available
#			# and also because this one should be picked rarely even if the others are available
#			10 = {
#				trigger = {
#					
#				}
#				modifier = {
#					factor = 0.5
#					all_neighbor_country = {
#						low_tolerance_gnomish_race_trigger = yes
#					}
#				}
#				effect
#			}
#		}
#	}
#}

#Event manager Escann side
country_event = {
	id = escanni_refugees_settlement.4
	title = "escanni_refugees_settlement.4.t"
	picture = REFUGEES_ESCAPING_eventPicture
	desc = "escanni_refugees_settlement.4.d"
	
	is_triggered_only = yes

	trigger = {
		capital_scope = {
			OR = {
				superregion = western_cannor_superregion
				superregion = escann_superregion
			}
		}
		NOT = { has_country_flag = elikhand_no_refugees }
		any_owned_province = {
			has_province_flag = escanni_migration_target
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	option = { #Debug integration
		name = escanni_refugees_settlement.4.a
		ai_chance = { factor = 0 }
		every_owned_province = {
			limit = {
				has_province_flag = escanni_migration_target
			}
			decrease_escanni_refugee_settlement_size = yes
			if = {
				limit = { is_city = yes }
				add_random_development = 1
			}
			else = {
				add_colonysize = 300
			}
			clr_province_flag = escanni_migration_target
		}
	}
}

#Result of refugee policy
country_event = {
	id = escanni_refugees_settlement.5
	title = "escanni_refugees_settlement.5.t"
	picture = REFUGEES_ESCAPING_eventPicture
	desc = "escanni_refugees_settlement.5.d"
	
	is_triggered_only = yes

	trigger = {
		is_year = 1453
		capital_scope = {
			OR = {
				superregion = western_cannor_superregion
				superregion = escann_superregion
			}
		}
		any_owned_province = {
			has_escanni_refugees = yes
		}
		escann_superregion = {
			any_province = {
				OR = {
					region = inner_castanor_region
					region = west_castanor_region
					region = south_castanor_region
				}
				NOT = {
					OR =  {
					is_empty = yes
					has_province_flag = escanni_migration_target
					}
				}
				owner = {
					NOT = { has_country_modifier = monstrous_nation }
				}
			}
		}
	}

	mean_time_to_happen = {
		days = 1
	}

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_escanni_refugees = yes
				}
				save_event_target_as = escanni_emigration_target_1
			}
			random_owned_province = {
				limit = {
					has_escanni_refugees = yes
					NOT = { province_id = event_target:escanni_emigration_target_1 }
				}
				save_event_target_as = escanni_emigration_target_2
			}
			escann_superregion = {
				random_province = {
					limit = { 
						OR = {
							region = inner_castanor_region
							region = west_castanor_region
							region = south_castanor_region
						}
						NOT = {
							OR =  {
							is_empty = yes
							has_province_flag = escanni_migration_target
							}
						}
						owner = {
							NOT = { has_country_modifier = monstrous_nation }
						}
					}
					save_event_target_as = escanni_migration_target_1
				}
				random_province = {
					limit = { 
						OR = {
							region = inner_castanor_region
							region = west_castanor_region
							region = south_castanor_region
						}
						NOT = {
							OR =  {
							is_empty = yes
							has_province_flag = escanni_migration_target
							province_id = event_target:escanni_migration_target_1
							}
						}
						owner = {
							NOT = { has_country_modifier = monstrous_nation }
						}
					}
					save_event_target_as = escanni_migration_target_2
				}
			}
		}
	}

	option = { #Refugees leave, whatever
		name = escanni_refugees_settlement.5.a
		ai_chance = { factor = 0 }
		event_target:escanni_migration_target_1 = {
			decrease_escanni_refugee_settlement_size = yes
		}
		#escanni flagging isn't impletemented for this yet
	}
	option = { #Refugees leave, we help them
		name = escanni_refugees_settlement.5.b
		ai_chance = { factor = 0 }
		event_target:escanni_emigration_target_1 = {
			decrease_escanni_refugee_settlement_size = yes
		}
		event_target:escanni_migration_target_1 = {
			set_province_flag = escanni_migration_target
			increase_escanni_refugee_settlement_size = yes #debugging
		}
	}
	option = { #Refugees leave, we make more leave
		name = escanni_refugees_settlement.5.c
		ai_chance = { factor = 0 }
		trigger = {
			OR = {
				has_country_flag = refugee_major_discrimination_policy
				has_country_flag = refugee_minor_discrimination_policy
			}
		}
		event_target:escanni_emigration_target_1 = {
			decrease_escanni_refugee_settlement_size = yes
		}
		event_target:escanni_emigration_target_2 = {
			decrease_escanni_refugee_settlement_size = yes
		}
		event_target:escanni_migration_target_1 = {
			set_province_flag = escanni_migration_target
			increase_escanni_refugee_settlement_size = yes #debugging
		}
		event_target:escanni_migration_target_2 = {
			set_province_flag = escanni_migration_target
			increase_escanni_refugee_settlement_size = yes #debugging
		}
	}
	option = { #Push for integration
		name = escanni_refugees_settlement.5.d
		ai_chance = { factor = 1 }
		trigger = {
			NOT = { has_country_flag = refugee_major_discrimination_policy }
		}
		event_target:escanni_emigration_target_1 = {
			decrease_escanni_refugee_settlement_size = yes
			add_random_development = 1
		}
	}
}

